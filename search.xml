<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>測試用 哈囉你好嗎</title>
      <link href="/uncategorized/20240428/3027850301/"/>
      <url>/uncategorized/20240428/3027850301/</url>
      
        <content type="html"><![CDATA[<h1 id="Before-you-start"><a href="#Before-you-start" class="headerlink" title="Before you start"></a>Before you start</h1><h3 id="Environment-setup-what-you-need"><a href="#Environment-setup-what-you-need" class="headerlink" title="Environment setup what you need"></a>Environment setup what you need</h3><h4 id="1-kustomize-kubectl-二選一即可-kubectl需要1-18版以上"><a href="#1-kustomize-kubectl-二選一即可-kubectl需要1-18版以上" class="headerlink" title="1. kustomize &#x2F; kubectl (二選一即可) (kubectl需要1.18版以上)"></a>1. kustomize &#x2F; kubectl (二選一即可) (kubectl需要1.18版以上)</h4><ul><li>kustomize<ul><li><a href="https://community.chocolatey.org/packages/kustomize">windows安裝</a> <code>choco install kustomize</code></li><li><a href="https://formulae.brew.sh/formula/kustomize">mac安裝</a> <code>brew install kustomize</code></li></ul></li><li>kubectl<ul><li><a href="https://community.chocolatey.org/packages/kubernetes-cli">windows安裝</a> <code>choco install kubernetes-cli</code></li><li><a href="https://kubernetes.io/docs/tasks/tools/install-kubectl-macos/#install-with-homebrew-on-macos">mac安裝</a> <code>brew install kubectl</code></li></ul></li></ul><h4 id="2-docker"><a href="#2-docker" class="headerlink" title="2. docker"></a>2. docker</h4><ul><li><a href="https://docs.docker.com/desktop/windows/install/">windows安裝</a></li><li><a href="https://docs.docker.com/desktop/mac/install/">mac安裝</a></li></ul><h4 id="3-hosts文件內-增加設定，才可以使用透過公司網路-外網需用VPN-，連線到Cki-UAT"><a href="#3-hosts文件內-增加設定，才可以使用透過公司網路-外網需用VPN-，連線到Cki-UAT" class="headerlink" title="3. hosts文件內 增加設定，才可以使用透過公司網路(外網需用VPN)，連線到Cki UAT"></a>3. hosts文件內 增加設定，才可以使用透過<strong>公司網路</strong>(外網需用VPN)，連線到Cki UAT</h4><ul><li>windos:<code>C:\WINDOWS\system32\drivers\etc</code></li><li>mac:<code>/etc/hosts</code></li><li>或直接安裝<a href="https://github.com/oldj/SwitchHosts">switchhosts</a></li></ul><h1 id="過版流程"><a href="#過版流程" class="headerlink" title="過版流程"></a>過版流程</h1><ol><li><p><strong>修改<code>deploy/overlays/&#123;env&#125;/kustomization.yaml</code>底下要過版的image tag</strong></p><ul><li>image tag 要與過版申請excel的版號相同,不是與slke裡面的相同</li><li>修改過後要將檔案commit到github上</li></ul></li><li><p><strong>build yaml</strong> </p><blockquote><p>Windows請在git bash中執行</p></blockquote><ul><li>cd 到<code>deploy</code>資料夾底下</li><li>使用 <code>GenDeployFile.sh</code> 的shell script， 第一個參數指定 <code>overlays/&#123;env&#125;</code>路徑即可，<br>執行後會在<code>&#123;env&#125;</code>底下建立日期資料夾，裡面會產生部署用yaml &amp; 準備image相關的script</li><li>產生uat的yaml，預設使用的是kustomize <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh GenDeployFile.sh ./overlays/uat</span><br></pre></td></tr></table></figure></li><li>如果要用kubectl的話，加上-k參數<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh GenDeployFile.sh ./overlays/uat -k</span><br></pre></td></tr></table></figure></li><li>結果範例：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">└── &#123;env&#125;</span><br><span class="line">    └── 20240314</span><br><span class="line">               ├── 20240314-&#123;服務&#125;.yaml</span><br><span class="line">               └── pull&amp;push-&#123;服務&#125;.sh</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>pull image from SoftLeader Harbor and push to Cki UAT harbor</strong></p><ul><li>cd 到上一步驟產生出的日期資料夾底下</li><li>1.先開docker</li><li>2.開啟Switchhost</li><li>3.登入公司Harbor 並且在git bash 執行docker login harbor.softleader.com.tw -u ‘${用戶名}’ -p ‘${CLI密碼}’</li><li>4.登入UAT Harbor 並且在git bash 執行docker login registrytest.cki.com.tw -u ‘sluser.b2c1’ -p ‘${AD帳號的密碼}’</li><li>5.執行<code>sh pull&amp;push-&#123;服務&#125;.sh</code>(Git Bash 裡要使用”&amp;”當作字符,需要跳脫符號”&quot;)</li><li>註：如果遇到<code>unauthorized to access repository...action: $&#123;push/pull&#125;</code>，<br>先確認action後面是pull還是push<ul><li>pull 表示沒有登入公司harbor &gt;&gt; <a href="#login-softleader-harbor">see how to login</a></li><li>push 表示沒有登入cki uat harbor &gt;&gt; <a href="#login-cki-uat-harbor">see how to login</a></li></ul></li></ul></li><li><p><strong>連線到75.67跳板機</strong></p></li><li><p><strong>打開MobaXterm連線到75.66過版機</strong></p></li><li><p><strong>部署到OCP</strong></p><ul><li><code>oc project</code>或是簡寫(alias) <code>op</code> 先確定一下現在的project，如果不是正確的，需重新<a href="#ocp-login">oc login</a><blockquote><p>有兩座OCP cluster，project分別為 ecb2c、ecb2c-backend（詳見<a href="#%E6%9E%B6%E6%A7%8B%E7%A4%BA%E6%84%8F%E5%9C%96">架構示意圖</a>)，看當前要過版的服務決定要login哪一個</p></blockquote></li><li>把yaml放進75.66過版機的portal資料夾或是backend資料夾內</li><li><code>oc apply -f &#123;yaml檔&#125;</code> 部署單一yaml，或是<code>oc apply --recursive -f &#123;資料夾&#125;</code>把資料夾裡面的yaml全部apply<blockquote><p><code>oc apply --recursive -f</code>有設定alias為<code>ka</code>，可以直接 <code>ka &#123;資料夾&#125;</code>或<code>ka &#123;yaml檔&#125;</code></p></blockquote></li><li>備註：75.66有設定常用alias如下：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">確認當前OCP版本</span></span><br><span class="line">op=&#x27;oc project&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">以下用k開頭，方便公司同仁有使用kubectl-aliases的可以無痛使用</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">apply</span> </span><br><span class="line">ka=&#x27;oc apply --recursive -f&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看所有pods</span></span><br><span class="line">kgpo=&#x27;oc get pods&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看pod裡的<span class="built_in">log</span></span></span><br><span class="line">klo=&#x27;oc logs -f&#x27;</span><br><span class="line">         # 確認當前OCP版本</span><br><span class="line">op=&#x27;oc project&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">以下用k開頭，方便公司同仁有使用kubectl-aliases的可以無痛使用</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">apply</span> </span><br><span class="line">ka=&#x27;oc apply --recursive -f&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看所有pods</span></span><br><span class="line">kgpo=&#x27;oc get pods&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看pod裡的<span class="built_in">log</span></span></span><br><span class="line">klo=&#x27;oc logs -f&#x27;</span><br><span class="line">         # 確認當前OCP版本</span><br><span class="line">op=&#x27;oc project&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">以下用k開頭，方便公司同仁有使用kubectl-aliases的可以無痛使用</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">apply</span> </span><br><span class="line">ka=&#x27;oc apply --recursive -f&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看所有pods</span></span><br><span class="line">kgpo=&#x27;oc get pods&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看pod裡的<span class="built_in">log</span></span></span><br><span class="line">klo=&#x27;oc logs -f&#x27;</span><br><span class="line">         # 確認當前OCP版本</span><br><span class="line">op=&#x27;oc project&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">以下用k開頭，方便公司同仁有使用kubectl-aliases的可以無痛使用</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">apply</span> </span><br><span class="line">ka=&#x27;oc apply --recursive -f&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看所有pods</span></span><br><span class="line">kgpo=&#x27;oc get pods&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看pod裡的<span class="built_in">log</span></span></span><br><span class="line">klo=&#x27;oc logs -f&#x27;</span><br><span class="line">         # 確認當前OCP版本</span><br><span class="line">op=&#x27;oc project&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">以下用k開頭，方便公司同仁有使用kubectl-aliases的可以無痛使用</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">apply</span> </span><br><span class="line">ka=&#x27;oc apply --recursive -f&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看所有pods</span></span><br><span class="line">kgpo=&#x27;oc get pods&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看pod裡的<span class="built_in">log</span></span></span><br><span class="line">klo=&#x27;oc logs -f&#x27;</span><br><span class="line">         # 確認當前OCP版本</span><br><span class="line">op=&#x27;oc project&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">以下用k開頭，方便公司同仁有使用kubectl-aliases的可以無痛使用</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">apply</span> </span><br><span class="line">ka=&#x27;oc apply --recursive -f&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看所有pods</span></span><br><span class="line">kgpo=&#x27;oc get pods&#x27;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看pod裡的<span class="built_in">log</span></span></span><br><span class="line">klo=&#x27;oc logs -f&#x27;</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>看版本有沒有上去</strong></p></li></ol><hr><h1 id="Login-Image-Registry"><a href="#Login-Image-Registry" class="headerlink" title="Login Image Registry"></a>Login Image Registry</h1><h4 id="Login-SoftLeader-Harbor"><a href="#Login-SoftLeader-Harbor" class="headerlink" title="Login SoftLeader Harbor"></a>Login SoftLeader Harbor</h4><h4 id="Login-Cki-Uat-Harbor"><a href="#Login-Cki-Uat-Harbor" class="headerlink" title="Login Cki Uat Harbor"></a>Login Cki Uat Harbor</h4><h2 id="OCP-login"><a href="#OCP-login" class="headerlink" title="OCP login"></a>OCP login</h2><hr><h2 id="CyberArk登入相關"><a href="#CyberArk登入相關" class="headerlink" title="CyberArk登入相關"></a>CyberArk登入相關</h2><hr>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
